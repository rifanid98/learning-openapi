{
  "openapi": "3.0.3",
  "info": {
    "title": "TodoList RESTful API",
    "version": "1.0.0",
    "description": "OpenAPI for TodoList RESTful API",
    "termsOfService": " https://www.programmerzaman.now",
    "contact": {
      "name": "Eko Kurniawan Khannedy",
      "email": "echo.khannedy@gmail.com",
      "url": "https://www.programmerzamannow.com"
    },
    "license": {
      "name": "APACHE 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://{environtment}.programmerzamannow.com/api/v1",
      "description": "TodoList RESTful API Server",
      "variables": {
        "environtment": {
          "default": "dev",
          "description": "Server Envirotnment",
          "enum": [
            "dev",
            "qa",
            "prod"
          ]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "Youtube Programmer Zaman Now",
    "url": "https://www.youtube.com/c/ProgrammerZamanNow"
  },
  "paths": {
    "/todolist": {
      "get": {
        "summary": "Get All TodoList",
        "description": "Get all active todolist by default",
        "parameters": [
          {
            "in": "query",
            "name": "include_done",
            "required": false,
            "description": "Is include done todolist",
            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Filter todolist by name",
            "schema": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "summary": "Create new todolist",
        "description": "Create new todolist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true,
                    "minLength": 1,
                    "example": "Todo 1"
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "minimum": 1,
                    "example": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "items": {
                      "type": "string",
                      "minItems": 1,
                      "example": "daily"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {}
      }
    },
    "/todolist/{todoListId}": {
      "put": {
        "summary": "Update existing todolist",
        "description": "Update existing todolist",
        "parameters": [
          {
            "in": "path",
            "name": "todoListId",
            "description": "Todolist id for updated",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true,
                    "minLength": 1,
                    "example": "Todo 1"
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "minimum": 1,
                    "example": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "items": {
                      "type": "string",
                      "minItems": 1,
                      "example": "daily"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {}
      },
      "delete": {
        "summary": "Delete existing todolist",
        "description": "Delete existing todolist",
        "parameters": [
          {
            "in": "path",
            "name": "todoListId",
            "description": "Todolist id for deleted",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {}
      }
    }
  }
}
